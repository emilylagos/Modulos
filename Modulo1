# Código (solo archivos)

---

## src/styles.css

```
@import "~bootstrap/dist/css/bootstrap.min.css";

/* estilos globales adicionales */
body {
  padding: 1rem;
  background-color: #f8f9fa;
}
```

---

## src/app/app.module.ts

```
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';

import { AppComponent } from './app.component';
import { ItemListComponent } from './item-list/item-list.component';

@NgModule({
  declarations: [
    AppComponent,
    ItemListComponent
  ],
  imports: [
    BrowserModule,
    FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
```

---

## src/app/app.component.ts

```
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'Mi SPA Angular con Bootstrap';
}
```

---

## src/app/app.component.html

```
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container">
    <a class="navbar-brand" href="#">{{ title }}</a>
  </div>
</nav>

<div class="container mt-4">
  <app-item-list></app-item-list>
</div>
```

---

## src/app/item-list/item-list.component.ts

```
import { Component, HostBinding } from '@angular/core';

interface Item {
  name: string;
  description: string;
}

@Component({
  selector: 'app-item-list',
  templateUrl: './item-list.component.html',
  styleUrls: ['./item-list.component.css']
})
export class ItemListComponent {
  @HostBinding('class') hostClass = 'card p-3 shadow-sm';

  items: Item[] = [
    { name: 'Café Latte', description: 'Bebida suave y cremosa' },
    { name: 'Café Negro', description: 'Fuerte y aromático' }
  ];

  componentTitle = 'Listado de Productos';

  addItem(name: string, description: string) {
    const trimmedName = name?.trim();
    const trimmedDesc = description?.trim();

    if (!trimmedName) {
      alert('Por favor ingresa un nombre válido.');
      return;
    }

    this.items.push({ name: trimmedName, description: trimmedDesc });
  }
}
```

---

## src/app/item-list/item-list.component.html

```
<div class="card-body">
  <h5 class="card-title">{{ componentTitle }}</h5>

  <form class="row g-2 mb-3" #itemForm="ngForm" (submit)="$event.preventDefault()">
    <div class="col-md-5">
      <input #name class="form-control" placeholder="Nombre" />
    </div>
    <div class="col-md-5">
      <input #description class="form-control" placeholder="Descripción" />
    </div>
    <div class="col-md-2 d-grid">
      <button type="button" class="btn btn-primary" (click)="addItem(name.value, description.value); name.value=''; description.value='';">
        Agregar
      </button>
    </div>
  </form>

  <ul class="list-group">
    <li class="list-group-item" *ngFor="let item of items; let i = index">
      <strong>{{ item.name }}</strong> — <span>{{ item.description }}</span>
    </li>
  </ul>
</div>
```

---

## src/app/item-list/item-list.component.css

```
:host {
  display: block;
  max-width: 800px;
  margin: 0 auto;
}
```

---

## package.json (fragmento importante)

```
{
  "dependencies": {
    "@angular/animations": "~13.0.0",
    "@angular/common": "~13.0.0",
    "@angular/compiler": "~13.0.0",
    "@angular/core": "~13.0.0",
    "@angular/forms": "~13.0.0",
    "@angular/platform-browser": "~13.0.0",
    "bootstrap": "^5.0.0"
  }
}
```

---

Fin del código.
